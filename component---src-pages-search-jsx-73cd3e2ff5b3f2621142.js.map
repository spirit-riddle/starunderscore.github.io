{"version":3,"file":"component---src-pages-search-jsx-73cd3e2ff5b3f2621142.js","mappings":"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","sources":["webpack://github-entrance-page/./src/pages/search.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\nimport EmptyLayout from \"../components/EmptyLayout/EmptyLayout\";\nimport { Helmet } from \"react-helmet\";\n\nconst Sitemap = () => {\n  // Fetch data including siteTitle and Markdown files\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark {\n        nodes {\n          fields {\n            slug\n          }\n          rawMarkdownBody\n        }\n      }\n    }\n  `);\n\n  const siteTitle = data.site.siteMetadata.title;\n\n  const stripJsxTags = (jsxContent) => jsxContent.replace(/<[^>]+>/g, \"\"); // Strip HTML tags\n\n  const initialQuery =\n    typeof window !== \"undefined\"\n      ? new URLSearchParams(window.location.search).get(\"q\") || \"\"\n      : \"\";\n\n  const [searchQuery, setSearchQuery] = useState(initialQuery);\n\n  const highlightQuery = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, `<mark>$1</mark>`);\n  };\n\n  const categorizedData = {\n    blog: [],\n    training: [],\n    pdfs: [],\n    product: {},\n  };\n\n  // Group product files by project\n  data.allMarkdownRemark.nodes.forEach((node) => {\n    const slug = node.fields.slug;\n    const snippets = node.rawMarkdownBody\n      .split(\"\\n\")\n      .filter((line) => line.trim() !== \"\");\n\n    if (slug.startsWith(\"website/blog\")) {\n      categorizedData.blog.push({\n        path: `/blog/${slug.split(\"/\").pop()}`,\n        snippets,\n      });\n    } else if (slug.startsWith(\"website/training\")) {\n      categorizedData.training.push({\n        path: `/training/${slug.split(\"/\").pop()}`,\n        snippets,\n      });\n    } else if (slug.startsWith(\"website/appendices/website\")) {\n      categorizedData.pdfs.push({\n        path: `/appendices/website/${slug.split(\"/\").pop()}`,\n        snippets,\n      });\n    } else if (slug.startsWith(\"website/products\")) {\n      const parts = slug.split(\"/\");\n      const productName = parts[2]; // Extract project name (e.g., \"awesome-sauce\")\n      const fileName = parts.slice(3).join(\"/\"); // Extract the rest of the path (e.g., \"file.md\")\n\n      if (!categorizedData.product[productName]) {\n        categorizedData.product[productName] = [];\n      }\n\n      categorizedData.product[productName].push({\n        path: `/products/${productName}/${fileName}`,\n        snippets,\n      });\n    }\n  });\n\n  const filteredData = {};\n  Object.keys(categorizedData).forEach((key) => {\n    if (key === \"product\") {\n      // Filter for products differently\n      filteredData[key] = {};\n      Object.keys(categorizedData[key]).forEach((productName) => {\n        const files = categorizedData[key][productName]\n          .filter((file) =>\n            searchQuery\n              ? file.snippets.some((line) =>\n                line.toLowerCase().includes(searchQuery.toLowerCase())\n              )\n              : true\n          )\n          .map((file) => ({\n            ...file,\n            snippets: searchQuery\n              ? file.snippets.filter((line) =>\n                line.toLowerCase().includes(searchQuery.toLowerCase())\n              )\n              : [],\n          }));\n\n        if (files.length > 0 || !searchQuery) {\n          filteredData[key][productName] = files;\n        }\n      });\n    } else {\n      filteredData[key] = categorizedData[key]\n        .filter((item) =>\n          searchQuery\n            ? item.snippets.some((line) =>\n              line.toLowerCase().includes(searchQuery.toLowerCase())\n            )\n            : true\n        )\n        .map((item) => ({\n          ...item,\n          snippets: searchQuery\n            ? item.snippets.filter((line) =>\n              line.toLowerCase().includes(searchQuery.toLowerCase())\n            )\n            : [],\n        }));\n    }\n  });\n\n  return (\n    <EmptyLayout>\n      <Helmet>\n        <title>Search | {siteTitle}</title>\n      </Helmet>\n      <main style={{ padding: \"1rem\", maxWidth: \"800px\", margin: \"0 auto\" }}>\n        <h1>Search</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          style={{\n            width: \"100%\",\n            padding: \"0.5rem\",\n            marginBottom: \"1rem\",\n            borderRadius: \"4px\",\n          }}\n        />\n        {Object.entries(filteredData).map(([category, items]) => {\n          if (category === \"product\") {\n            // Render the two-dimensional product section\n            return (\n              <section key={category}>\n                <h2>Products</h2>\n                {Object.entries(items).map(([productName, files]) => (\n                  <div key={productName}>\n                    <h3>{productName}</h3>\n                    <ul>\n                      {files.map((file, idx) => (\n                        <li key={idx}>\n                          <a href={file.path}>\n                            {file.path.split(\"/\").pop()}\n                          </a>\n                          {searchQuery && file.snippets.length > 0 && (\n                            <ul>\n                              {file.snippets.map((snippet, snippetIdx) => (\n                                <li\n                                  key={snippetIdx}\n                                  dangerouslySetInnerHTML={{\n                                    __html: highlightQuery(snippet, searchQuery),\n                                  }}\n                                ></li>\n                              ))}\n                            </ul>\n                          )}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              </section>\n            );\n          }\n\n          return (\n            <section key={category}>\n              <h2>{category.charAt(0).toUpperCase() + category.slice(1)}</h2>\n              {items.length > 0 ? (\n                <ul>\n                  {items.map((item, idx) => (\n                    <li key={idx}>\n                      <a href={item.path}>\n                        {item.path.split(\"/\").pop()}\n                      </a>\n                      {searchQuery && item.snippets.length > 0 && (\n                        <ul>\n                          {item.snippets.map((snippet, snippetIdx) => (\n                            <li\n                              key={snippetIdx}\n                              dangerouslySetInnerHTML={{\n                                __html: highlightQuery(snippet, searchQuery),\n                              }}\n                            ></li>\n                          ))}\n                        </ul>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p>No results found.</p>\n              )}\n            </section>\n          );\n        })}\n        <footer>\n          <p>\n            Want to understand how this site is structured?\n            <br />\n            <Link to=\"/blog/2025-01-03-the-star-underscore-sitemap-product-and-philosophy/\">\n              Read this blog post to learn more.\n            </Link>\n          </p>\n        </footer>\n\n      </main>\n    </EmptyLayout>\n  );\n};\n\nexport default Sitemap;\n"],"names":["Sitemap","data","useStaticQuery","siteTitle","site","siteMetadata","title","initialQuery","window","URLSearchParams","location","search","get","searchQuery","setSearchQuery","useState","highlightQuery","text","query","regex","RegExp","replace","categorizedData","blog","training","pdfs","product","allMarkdownRemark","nodes","forEach","node","slug","fields","snippets","rawMarkdownBody","split","filter","line","trim","startsWith","push","path","pop","parts","productName","fileName","slice","join","filteredData","Object","keys","key","files","file","some","toLowerCase","includes","map","length","item","React","EmptyLayout","Helmet","style","padding","maxWidth","margin","type","placeholder","value","onChange","e","target","width","marginBottom","borderRadius","entries","_ref","category","items","_ref2","idx","href","snippet","snippetIdx","dangerouslySetInnerHTML","__html","charAt","toUpperCase","Link","to"],"sourceRoot":""}